@startuml firstMilestoneDiagram
skinparam classAttributeIconSize 0

package "firstmilestone" {

  class Actions {
    {static} + String ACTION_OPEN
    {static} + String ACTION_CLOSE
    {static} + String ACTION_LOCK
    {static} + String ACTION_UNLOCK
    {static} + String ACTION_UNLOCK_SHORT
    {static} + String ACTION_PROP
  }

  interface Area {
    +String getName()
    +Area[] getChildren()
    +Door[] getDoors()
  }

  class Space {
    -String name
    -String description
    -Door[] doors
    +String getName()
    +Area[] getChildren()
    +Door[] getDoors()
    -void addDoor(Door door)
  }

  class Partition {
    -String name
    -String description
    -Area[] children
    +String getName()
    +Area[] getChildren()
    +Door[] getDoors()
    +void addChild(Area child)
  }

  class Schedule {
    -DayOfWeek[] days
    -LocalTime[] hours
    -LocalDate[] dates
  }

  class User {
    -String username
    -String credential
    -UserGroup userGroup
  }

  class UserGroup {
    -User[] users
    -String userGroupName
    -Schedule schedule
    -String[] actions
    -String[] doors
    
    +void addUser(User user)
    +boolean isActionAllowed(String action, String doorId, LocalDateTime now)
  }

  class Door {
    -String id
    -boolean closed
    -DoorState state
   
    +void processRequest(RequestReader request)
    +boolean isClosed()
    +void doAction(String action)

  }

  abstract class DoorState {
    #Door door
    {abstract} +void open(Door door)
    {abstract} +void close(Door door)
    {abstract} +void lock(Door door)
    {abstract} +void unlock(Door door)
    {abstract} +void unlockShort(Door door)
    {abstract} +void prop(Door door)
  }

  class DoorLocked{
    +void open(Door door)
    +void close(Door door)
    +void lock(Door door)
    +void unlock(Door door)
    +void unlockShort(Door door)
    +void prop(Door door)
    }
  class DoorPropped{
    +void open(Door door)
    +void close(Door door)
    +void lock(Door door)
    +void unlock(Door door)
    +void unlockShort(Door door)
    +void prop(Door door)
    }
  class DoorUnlocked{
    +void open(Door door)
    +void close(Door door)
    +void lock(Door door)
    +void unlock(Door door)
    +void unlockShort(Door door)
    +void prop(Door door)
    }

  class DoorUnlockedSh{
    +void update(Obsservable observable, Object arg)
    +void open(Door door)
    +void close(Door door)
    +void lock(Door door)
    +void unlock(Door door)
    +void unlockShort(Door door)
    +void prop(Door door)
    }

  ' Directory singletons
  class DirectoryAreas {
    {static} - ArrayList<Area> allAreas 
    {static} + Area findAreaByName (String name)
    {static} + void makeAreas()
  }

  class DirectoryDoors {
    {static} - ArrayList<Door> allDoors 
    {static} + void makeDoors()
    {static} + Area findDoorById (String id)
  }

  class DirectoryUsers {
    {static} - ArrayList<User> users
    {static} + void makeUsers()
    {static} + User findByCredential (String credential)
  }

  class DirectoryUserGroups {
    {static} - UserGroup[] userGroups
    {static} + void makeUserGroups()
    {static} + UserGroup findUserGroupByName (String name)
  }

  class Clock {
    - long delay
    + void startTimer()
    + TimerTask notify_time(Clock clock)
  }

  abstract class Observable {
    - ArrayList<Observer> observers
    + void addObserver(Observer o)
    + void notifyObservers(Object arg)
  }

  interface Observer {
    {abstract} + void update(Observable observable, Object arg)
  }

}

' Relationships
UserGroup "1" o-d- "*" User : members
DoorUnlockedSh .u.|> Observer
Observer -u- Observable
Observable <|-u- Clock
<<<<<<< HEAD
User "1" --> "1" UserGroup : group
Area "1" o-- "*" Space : extends
Partition "1" o-- "*" Space : contains
Space "1" o-r- "*" Door : contains
Area "1" o-- "*" Partition : extends
Door "1" -d-> "1" DoorState : has
=======
User "1" -u-> "1" UserGroup : group
Area <|.. Space : implements
Area <|.. Partition : implements
Space "1" o-- "*" Door : contains
Partition "1" o-- "*" Area : children
Door "1" --> "1" DoorState : has
>>>>>>> 719e19c (Co-authored-by: Héctor González <Hectorcde21@users.noreply.github.com>)
DoorUnlockedSh -u-|>  DoorState
DoorUnlocked -u-|> DoorState
DoorLocked -u-|> DoorState
DoorPropped -u-|> DoorState
DirectoryAreas "1" o-- "*" Area
<<<<<<< HEAD
DirectoryDoors "1" o-l- "*" Door
DirectoryUsers "1" o-- "*" User
=======
DirectoryDoors "1" o-- "*" Door
DirectoryUsers "1" o-u- "*" User
>>>>>>> 719e19c (Co-authored-by: Héctor González <Hectorcde21@users.noreply.github.com>)
DirectoryUserGroups "1" o-- "*" UserGroup
Schedule --> UserGroup


@enduml
